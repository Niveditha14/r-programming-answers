print("two vectors of different length :")
v1=c(1,3,4,5)
v2=c(10,11,12,13,14,15)
print(v1)
print(v2)
result=array(c(v1,v2),dim=c(3,3,2))
print("new array")
print(result)
print("second row of the second matrix of the array:")
print(result[2,,2])
print("the element in the 3rd row 3rd column of the 1st matrix:")
print(result[3,3,1])
 7  
Day-2/day 2 prg 10.R
@@ -0,0 +1,7 @@
data=airquality
print("original data:daily air quality measurements in newyork,may to September 1973.")
print(class(data))
print(head(data))
result=data[order(data[,1]),]
print("order the entire data frame by the first and second column:")
print(head(result))
 5  
Day-2/day 2 prg 11.R
@@ -0,0 +1,5 @@
data = women
print(head(data))
height_f = cut(women$height,3)
print("Factor corresponding to height:")
print(table(height_f))
 8  
Day-2/day 2 prg 12.R
@@ -0,0 +1,8 @@
L = sample(LETTERS,size=10,replace=TRUE)
print("Original data:")
print(L)
f = factor(L)
print("Original factors:")
print(f)
print("Only five of the levels")
print(table(L[1:5]))
 9  
Day-2/day 2 prg 13.R
@@ -0,0 +1,9 @@
install.packages("VGAM")
library(dplyr)
i=iris
#1
summary(i)
dim(i)
#2
iris0=subset(iris, Species==c("setosa","virginica","versicolor"))
iris0 
 10  
Day-2/day 2 prg 2.R
@@ -0,0 +1,10 @@
num1=rbind(rep("A",3),rep("B",3),rep("C",3))
print("num1")
print(num1)
num2=rbind(rep("P",3),rep("Q",3),rep("R",3))
print(num2)
num3=rbind(rep("X",3),rep("Y",3),rep("Z",3))
print(num3)
a=matrix(t(cbind(num1,num2,num3)),ncol=3,byrow=T)
print("combine three arrays,taking one from each one by one:")
print(a)
 2  
Day-2/day 2 prg 3.R
@@ -0,0 +1,2 @@
array1=array(1:30,dim=c(3,4,2))
print(array1)
 4  
Day-2/day 2 prg 4.R
@@ -0,0 +1,4 @@
a=array(seq(from=50,length.out=15,by=2),c(5,3))
print("content of the array")
print("5x3 array of sequence of even integer greater than 50:")
print(a)
 9  
Day-2/day 2 prg 5.R
@@ -0,0 +1,9 @@
exam_data=data.frame(name=c('Ananstasia','Dima','Katherine','James','Emily','Michael','Mathew','Laura','Kevin','Jonas'),
score=c(12.5,9,16.5,12,9,20,14.5,13.5,8,19),
attempts=c(1,3,2,3,2,3,1,1,2,1),
qualify=c('yes','no','yes','no','no','yes','yes','no','no','yes'))
print("original dataframe:")
print(exam_data)
print("extract 3rd and 5th row with 1st and 3rd column:")
result=exam_data[c(3,5),c(1,3)]
print(result)
 9  
Day-2/day 2 prg 6.R
@@ -0,0 +1,9 @@
exam_data=data.frame(name=c('Ananstasia','Dima','Katherine','James','Emily','Michael','Mathew','Laura','Kevin','Jonas'),
                     score=c(12.5,9,16.5,12,9,20,14.5,13.5,8,19),
                     attempts=c(1,3,2,3,2,3,1,1,2,1),
                     qualify=c('yes','no','yes','no','no','yes','yes','no','no','yes'))
print("original datdaframes:")
print(exam_data)
print("new data frame after the 'country' column:")
exam_data$country=c("USA","USA","USA","USA","USA","USA","USA","USA","USA","USA")
print(exam_data)
 10  
Day-2/day 2 prg 7.R
@@ -0,0 +1,10 @@
exam_data=data.frame(name=c('Ananstasia','Dima','Katherine','James','Emily','Michael','Mathew','Laura','Kevin','Jonas'),
                     score=c(12.5,9,16.5,12,9,20,14.5,13.5,8,19),
                     attempts=c(1,3,2,3,2,3,1,1,2,1),
                     qualify=c('yes','no','yes','no','no','yes','yes','no','no','yes'))
print("original dataframe:")
print(exam_data)
new_exam_data=data.frame(name=c('Robert','Sophia'),score=c(10.5,9),attempts=c(1,3),qualify=c('yes','no'))
exam_data=rbind(exam_data,new_exam_data)
print("After addind new row(s) to an existing dataframe:")
print(exam_data)
 9  
Day-2/day 2 prg 8.R
@@ -0,0 +1,9 @@
exam_data=data.frame(name=c('Ananstasia','Dima','Katherine','James','Emily','Michael','Mathew','Laura','Kevin','Jonas'),
                     score=c(12.5,9,16.5,12,9,20,14.5,13.5,8,19),
                     attempts=c(1,3,2,3,2,3,1,1,2,1),
                     qualify=c('yes','no','yes','no','no','yes','yes','no','no','yes'))
print("Original dataframes:")
print(exam_data)
print("dataframes after sorting 'names' and 'score' columns:")
exam_data=exam_data[with(exam_data,order(name,score)),]
print(exam_data)
 9  
Day-2/day 2 prg 9.R
@@ -0,0 +1,9 @@
exam_data=data.frame(name=c('Ananstasia','Dima','Katherine','James','Emily','Michael','Mathew','Laura','Kevin','Jonas'),
                     score=c(12.5,9,16.5,12,9,20,14.5,13.5,8,19),
                     attempts=c(1,3,2,3,2,3,1,1,2,1),
                     qualify=c('yes','no','yes','no','no','yes','yes','no','no','yes'))
print("original dataframes")
print(exam_data)
save(exam_data,file="data.rda")
load("data.rda")
file.info("data.rda")
